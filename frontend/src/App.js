import { useState, useEffect } from "react";
import './App.css';
import { fetchPages, connectFacebook } from "./Features/Tool";
import axios from "axios";

function App() {
  const [pages, setPages] = useState([]);
  const [selectedPage, setSelectedPage] = useState("");
  const [conversations, setConversations] = useState([]);
  const [loading, setLoading] = useState(false);

  useEffect(() => {
    fetchPages()
      .then(setPages)
      .catch(err => console.error("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏û‡∏à‡πÑ‡∏î‡πâ:", err));
  }, []);

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏´‡πà‡∏≤‡∏á
  function timeAgo(dateString) {
    if (!dateString) return "-";
    const past = new Date(dateString);
    const now = new Date();
    const diffMs = now.getTime() - past.getTime();
    const diffSec = Math.floor(diffMs / 1000);
    if (diffSec < 0) return "0 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß";
    if (diffSec < 60) return `${diffSec} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß`;
    const diffMin = Math.floor(diffSec / 60);
    if (diffMin < 60) return `${diffMin} ‡∏ô‡∏≤‡∏ó‡∏µ‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß`;
    const diffHr = Math.floor(diffMin / 60);
    if (diffHr < 24) return `${diffHr} ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß`;
    const diffDay = Math.floor(diffHr / 24);
    return `${diffDay} ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß`;
  }

  const handleFetchConversations = () => {
    if (!selectedPage) {
      alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏û‡∏à");
      return;
    }
    setLoading(true);
    axios.get(`http://localhost:8000/psids?page_id=${selectedPage}`)
      .then(res => {
        const allConvs = res.data.conversations || [];
        const mapped = allConvs.map((conv, idx) => {
          const userName = conv.names && conv.names[0]
            ? conv.names[0]
            : (conv.participants && conv.participants[0]?.name)
              ? conv.participants[0].name
              : '‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏ä‡∏∑‡πà‡∏≠';
          return {
            id: idx + 1,
            updated_time: conv.updated_time,
            created_time: conv.created_time, // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ
            sender_name: conv.psids[0] || "Unknown",
            conversation_id: conv.conversation_id,
            conversation_name: ` ${userName}`,
            user_name: userName,
            raw_psid: conv.psids[0]
          };
        });
        setConversations(mapped);
      })
      .catch(err => {
        alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î");
        console.error(err);
      })
      .finally(() => setLoading(false));
  };

  return (
    <div style={{ display: "flex", minHeight: "100vh", backgroundColor: "#222" }}>
      {/* Sidebar */}
      <aside style={{ width: "200px", backgroundColor: "#ccc", padding: "20px" }}>
        <h3 style={{marginLeft:"35px"}}>‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠</h3>
        <button onClick={connectFacebook} class = "BT">
          <svg width="20" height="20" viewBox="0 0 320 512" fill="#fff" style={{ background: "#1877f3", borderRadius: "3px" }}>
            <path d="M279.14 288l14.22-92.66h-88.91V127.91c0-25.35 12.42-50.06 52.24-50.06H293V6.26S259.5 0 225.36 0c-73.22 0-121 44.38-121 124.72v70.62H22.89V288h81.47v224h100.2V288z"/>
          </svg>
        </button>
        <hr />
        <select
          value={selectedPage}
          onChange={(e) => setSelectedPage(e.target.value)}
          style={{ width: "100%", padding: "8px", marginTop: "10px" }}
        >
          <option value="" style={{textAlign:"center"}}>-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏û‡∏à --</option>
          {pages.map(page => (
            <option style={{textAlign:"center"}} key={page.id} value={page.id}>{page.name} </option>
          ))}
        </select>
        
        <a href="#" class="title" style={{marginLeft:"50px"}}>‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏∏‡∏î</a><br />
        <a href="#" class="title" style={{marginLeft:"53px"}}>Dashboard</a><br />
        <a href="#" class="title" style={{marginLeft:"64px"}}>Setting</a><br />
      
      </aside>

      {/* Main Dashboard */}
      <main style={{ flexGrow: 1, padding: "20px", backgroundColor: "#f0f0f0" }}>
        <h2>üìã ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏∏‡∏î</h2>

        {/* Filters Bar (mockup) */}
        <div style={{ display: "flex", gap: "10px", marginBottom: "10px" }}>
          <input type="date" />
          <select><option>‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤</option></select>
          
          <select><option>Platform</option></select>
          <select><option>‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</option></select>
          <select><option>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó</option></select>
          <select><option>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏Ç‡∏∏‡∏î</option></select>
          <input input type="number" placeholder="‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤" min="0"/>
          <button>üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤</button>
          

        </div>

        {/* Table */}
        {loading ? (
          <p>‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</p>
        ) : (
          <table style={{ width: "100%", borderCollapse: "collapse", backgroundColor: "#fff" }}>
            <thead>
              <tr>
                <th style={{ border: "1px solid #ccc", padding: "8px"}}>‡∏•‡∏≥‡∏î‡∏±‡∏ö</th>
                <th style={{ border: "1px solid #ccc", padding: "8px" }}>‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ</th>
                <th style={{ border: "1px solid #ccc", padding: "8px" }}>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤</th>
                <th style={{ border: "1px solid #ccc", padding: "8px" }}>‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏´‡∏≤‡∏¢</th>
                <th style={{ border: "1px solid #ccc", padding: "8px" }}>Context</th>
                <th style={{ border: "1px solid #ccc", padding: "8px" }}>‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏™‡∏ô‡πÉ‡∏à</th>
                <th style={{ border: "1px solid #ccc", padding: "8px" }}>Platform</th>
                <th style={{ border: "1px solid #ccc", padding: "8px" }}>‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤</th>
                <th style={{ border: "1px solid #ccc", padding: "8px" }}>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏Ç‡∏∏‡∏î</th>
                
                <th style={{ border: "1px solid #ccc", padding: "8px" }}>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å</th>

                
              </tr>
            </thead>
            <tbody> 
              {conversations.map((conv, idx) => (
                <tr key={conv.conversation_id}>
                  <td style={{ border: "1px solid #ccc", padding: "8px" , textAlign: "center"}}>     {/* ‡∏•‡∏≥‡∏î‡∏±‡∏ö */}
                    {idx + 1}
                  </td>
                  
                  <td style={{ border: "1px solid #ccc", padding: "8px" }}>    {/* ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ */}
                    {conv.conversation_name || `‡∏ö‡∏ó‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡∏ó‡∏µ‡πà ${idx + 1}`}
                  </td>
                  
                  <td style={{ border: "1px solid #ccc", padding: "8px" }}>   {/* ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤ */}
                    {conv.created_time? new Date(conv.created_time).toLocaleDateString("th-TH", { year: 'numeric', month: 'short', day: 'numeric' }): "-"}
                  </td> 
                  
                  <td style={{ border: "1px solid #ccc", padding: "8px" }}>    {/* ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏´‡∏≤‡∏¢ */}
                    {timeAgo(conv.updated_time)}
                  </td> 
                  
                  <td style={{ border: "1px solid #ccc", padding: "8px" }}>    {/* Context */}
                    Context
                  </td>
                  
                  <td style={{ border: "1px solid #ccc", padding: "8px" }}>    {/* ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏™‡∏ô‡πÉ‡∏à */}
                    ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏™‡∏ô‡πÉ‡∏à
                  </td>
                  
                  <td style={{ border: "1px solid #ccc", padding: "8px" }}>    {/* Platform */}
                    Platform
                  </td>
                  
                  <td style={{ border: "1px solid #ccc", padding: "8px" }}>    {/* ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ */}
                    ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
                  </td>
                  
                  <td style={{ border: "1px solid #ccc", padding: "8px" }}>    {/* ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏Ç‡∏∏‡∏î */}
                    ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏Ç‡∏∏‡∏î
                  </td>
                 
                  <td style={{ border: "1px solid #ccc", padding: "8px" }}>    {/* ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å */}
                    <input type="checkbox" />
                  </td>
                </tr>
                
              ))}
            </tbody>
            
          </table>
          
        )}
        <button onClick={handleFetchConversations} style={{ marginTop: "10px" }}>
          üì• ‡∏Ç‡∏∏‡∏î
        </button>
      </main>
    </div>
  );
}

export default App;